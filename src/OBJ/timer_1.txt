; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\timer_1.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\timer_1.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\FLib\inc -I..\CORE -I..\driver -I..\BSP -I..\SYS -I..\tplib -IE:\github\dk-lock\src\Proj\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=..\obj\timer_1.crf ..\driver\timer.c]
                          THUMB

                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;67     */
;;;68     void TIM2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;69     {
;;;70     	uint16_t i = 0;
000002  2400              MOVS     r4,#0
;;;71     
;;;72     	if (SET == TIM_GetITStatus(TIM2, TIM_IT_Update))
000004  2101              MOVS     r1,#1
000006  0788              LSLS     r0,r1,#30
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2801              CMP      r0,#1
00000e  d118              BNE      |L1.66|
;;;73         {
;;;74             TIM_ClearITPendingBit( TIM2, TIM_IT_Update);
000010  2101              MOVS     r1,#1
000012  0780              LSLS     r0,r0,#30
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;75     		
;;;76     		if (g_timeout_cnt != 0x00)	//???????
000018  480a              LDR      r0,|L1.68|
00001a  6800              LDR      r0,[r0,#0]  ; g_timeout_cnt
00001c  b120              CBZ      r0,|L1.40|
;;;77     		{
;;;78     			g_timeout_cnt--;
00001e  4809              LDR      r0,|L1.68|
000020  6800              LDR      r0,[r0,#0]  ; g_timeout_cnt
000022  1e40              SUBS     r0,r0,#1
000024  4907              LDR      r1,|L1.68|
000026  6008              STR      r0,[r1,#0]  ; g_timeout_cnt
                  |L1.40|
;;;79     		}
;;;80     		
;;;81     		
;;;82             for (i = 0; i<(uint8_t)timer_max; i++)
000028  2400              MOVS     r4,#0
00002a  e008              B        |L1.62|
                  |L1.44|
;;;83             {
;;;84                 g_timer_cnt[i]++;
00002c  4806              LDR      r0,|L1.72|
00002e  f8500024          LDR      r0,[r0,r4,LSL #2]
000032  1c40              ADDS     r0,r0,#1
000034  4904              LDR      r1,|L1.72|
000036  f8410024          STR      r0,[r1,r4,LSL #2]
00003a  1c60              ADDS     r0,r4,#1              ;82
00003c  b284              UXTH     r4,r0                 ;82
                  |L1.62|
00003e  2c0f              CMP      r4,#0xf               ;82
000040  dbf4              BLT      |L1.44|
                  |L1.66|
;;;85             }	
;;;86     
;;;87     //		button_timer_ms();		//???????
;;;88         }
;;;89     }
000042  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L1.68|
                          DCD      g_timeout_cnt
                  |L1.72|
                          DCD      g_timer_cnt

                          AREA ||i.timer2_init||, CODE, READONLY, ALIGN=1

                  timer2_init PROC
;;;36     */
;;;37     void timer2_init(u16 arr, u16 psc)
000000  b5fe              PUSH     {r1-r7,lr}
;;;38     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;39     
;;;40     	TIM_TimeBaseInitTypeDef tim_init_structure;
;;;41     	uint16_t cnt = 1000;
000006  f44f767a          MOV      r6,#0x3e8
;;;42     
;;;43     	TIM_DeInit(TIM2); 
00000a  06f0              LSLS     r0,r6,#27
00000c  f7fffffe          BL       TIM_DeInit
;;;44         tim_init_structure.TIM_CounterMode = TIM_CounterMode_Up;
000010  2000              MOVS     r0,#0
000012  f8ad0002          STRH     r0,[sp,#2]
;;;45         tim_init_structure.TIM_ClockDivision = TIM_CKD_DIV1;
000016  f8ad0006          STRH     r0,[sp,#6]
;;;46         tim_init_structure.TIM_Period = arr;			//??????=(TIM_Prescaler+1)* (TIM_Period+1)/FLK
00001a  f8ad4004          STRH     r4,[sp,#4]
;;;47         tim_init_structure.TIM_Prescaler = psc; 	// 
00001e  f8ad5000          STRH     r5,[sp,#0]
;;;48         TIM_TimeBaseInit(TIM2, &tim_init_structure);
000022  4669              MOV      r1,sp
000024  06f0              LSLS     r0,r6,#27
000026  f7fffffe          BL       TIM_TimeBaseInit
;;;49     
;;;50     	TIM_ClearFlag(TIM2, TIM_FLAG_Update);
00002a  2101              MOVS     r1,#1
00002c  0788              LSLS     r0,r1,#30
00002e  f7fffffe          BL       TIM_ClearFlag
;;;51     	TIM_SetCounter(TIM2, 0);
000032  2100              MOVS     r1,#0
000034  06f0              LSLS     r0,r6,#27
000036  f7fffffe          BL       TIM_SetCounter
;;;52         TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
00003a  2201              MOVS     r2,#1
00003c  4611              MOV      r1,r2
00003e  0790              LSLS     r0,r2,#30
000040  f7fffffe          BL       TIM_ITConfig
;;;53         TIM_Cmd(TIM2, ENABLE);
000044  2101              MOVS     r1,#1
000046  0788              LSLS     r0,r1,#30
000048  f7fffffe          BL       TIM_Cmd
;;;54     }
00004c  bdfe              POP      {r1-r7,pc}
;;;55     
                          ENDP


                          AREA ||i.timer_delay_1ms||, CODE, READONLY, ALIGN=2

                  timer_delay_1ms PROC
;;;107    */
;;;108    void timer_delay_1ms(uint32_t ms)
000000  4903              LDR      r1,|L3.16|
;;;109    {
;;;110    	g_timeout_cnt = ms;		 
000002  6008              STR      r0,[r1,#0]  ; g_timeout_cnt
;;;111    	while(g_timeout_cnt != 0);					//
000004  bf00              NOP      
                  |L3.6|
000006  4902              LDR      r1,|L3.16|
000008  6809              LDR      r1,[r1,#0]  ; g_timeout_cnt
00000a  2900              CMP      r1,#0
00000c  d1fb              BNE      |L3.6|
;;;112    }
00000e  4770              BX       lr
;;;113    
                          ENDP

                  |L3.16|
                          DCD      g_timeout_cnt

                          AREA ||i.timer_is_timeout_1ms||, CODE, READONLY, ALIGN=2

                  timer_is_timeout_1ms PROC
;;;131    */
;;;132    u8 timer_is_timeout_1ms(uint8_t type, uint32_t count)
000000  b510              PUSH     {r4,lr}
;;;133    {
000002  4602              MOV      r2,r0
;;;134    	int status = 0;
000004  2300              MOVS     r3,#0
;;;135    	
;;;136    	if (g_timer_cnt[(uint8_t)(type)] >= count)
000006  4806              LDR      r0,|L4.32|
000008  f8500022          LDR      r0,[r0,r2,LSL #2]
00000c  4288              CMP      r0,r1
00000e  d304              BCC      |L4.26|
;;;137    	{
;;;138    		g_timer_cnt[(uint8_t)(type)] = 0;
000010  2000              MOVS     r0,#0
000012  4c03              LDR      r4,|L4.32|
000014  f8440022          STR      r0,[r4,r2,LSL #2]
;;;139    		status = 0;
000018  e000              B        |L4.28|
                  |L4.26|
;;;140    	}
;;;141    	else
;;;142    	{
;;;143    		status = 1;
00001a  2301              MOVS     r3,#1
                  |L4.28|
;;;144    	}
;;;145    	
;;;146    	return status;
00001c  b2d8              UXTB     r0,r3
;;;147    }
00001e  bd10              POP      {r4,pc}
;;;148    
                          ENDP

                  |L4.32|
                          DCD      g_timer_cnt

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_timer_cnt
                          %        60

                          AREA ||.data||, DATA, ALIGN=2

                  g_timeout_cnt
                          DCD      0x00000000
