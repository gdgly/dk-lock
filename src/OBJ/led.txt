; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\led.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\FLib\inc -I..\CORE -I..\driver -I..\BSP -I..\SYS -I..\tplib -IE:\github\dk-lock\src\Proj\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=..\obj\led.crf ..\driver\led.c]
                          THUMB

                          AREA ||i.LED_BEEP_MOTO_Init||, CODE, READONLY, ALIGN=2

                  LED_BEEP_MOTO_Init PROC
;;;6      //LED IO初始化
;;;7      void LED_BEEP_MOTO_Init(void)
000000  b508              PUSH     {r3,lr}
;;;8      {
;;;9       
;;;10      GPIO_InitTypeDef  GPIO_InitStructure;
;;;11      	
;;;12      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);	 //使能PA,PD端口时钟
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;13     	
;;;14      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0|GPIO_Pin_1;				 //LED0-->PA.8 端口配置
00000a  2003              MOVS     r0,#3
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;15      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;16      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		 //IO口速度为50MHz
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;17      GPIO_Init(GPIOC, &GPIO_InitStructure);					 //根据设定参数初始化GPIOA.8
00001c  4669              MOV      r1,sp
00001e  4809              LDR      r0,|L1.68|
000020  f7fffffe          BL       GPIO_Init
;;;18      GPIO_ResetBits(GPIOC,GPIO_Pin_0|GPIO_Pin_1);						 //PA.8 输出高
000024  2103              MOVS     r1,#3
000026  4807              LDR      r0,|L1.68|
000028  f7fffffe          BL       GPIO_ResetBits
;;;19     
;;;20      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4;	    		 //LED1-->PD.2 端口配置, 推挽输出
00002c  201c              MOVS     r0,#0x1c
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;21      GPIO_Init(GPIOC, &GPIO_InitStructure);	  				 //推挽输出 ，IO口速度为50MHz
000032  4669              MOV      r1,sp
000034  4803              LDR      r0,|L1.68|
000036  f7fffffe          BL       GPIO_Init
;;;22      GPIO_ResetBits(GPIOC,GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4); 						 //PD.2 输出高 
00003a  211c              MOVS     r1,#0x1c
00003c  4801              LDR      r0,|L1.68|
00003e  f7fffffe          BL       GPIO_ResetBits
;;;23     }
000042  bd08              POP      {r3,pc}
;;;24      void Park_Lock_Open(void)//开锁
                          ENDP

                  |L1.68|
                          DCD      0x40011000

                          AREA ||i.Park_Lock_Close||, CODE, READONLY, ALIGN=2

                  Park_Lock_Close PROC
;;;28      }
;;;29      void Park_Lock_Close(void)//关锁
000000  2001              MOVS     r0,#1
;;;30      {
;;;31     	 MOTOR_A=1;
000002  4903              LDR      r1,|L2.16|
000004  6008              STR      r0,[r1,#0]
;;;32     	 MOTOR_B=0;
000006  2000              MOVS     r0,#0
000008  4902              LDR      r1,|L2.20|
00000a  f8c10184          STR      r0,[r1,#0x184]
;;;33      }
00000e  4770              BX       lr
;;;34     
                          ENDP

                  |L2.16|
                          DCD      0x42220180
                  |L2.20|
                          DCD      0x42220000

                          AREA ||i.Park_Lock_Open||, CODE, READONLY, ALIGN=2

                  Park_Lock_Open PROC
;;;23     }
;;;24      void Park_Lock_Open(void)//开锁
000000  2000              MOVS     r0,#0
;;;25      {
;;;26     	 MOTOR_A=0;
000002  4903              LDR      r1,|L3.16|
000004  6008              STR      r0,[r1,#0]
;;;27     	 MOTOR_B=1;
000006  2001              MOVS     r0,#1
000008  4902              LDR      r1,|L3.20|
00000a  f8c10184          STR      r0,[r1,#0x184]
;;;28      }
00000e  4770              BX       lr
;;;29      void Park_Lock_Close(void)//关锁
                          ENDP

                  |L3.16|
                          DCD      0x42220180
                  |L3.20|
                          DCD      0x42220000

                          AREA ||i.Park_Lock_stop||, CODE, READONLY, ALIGN=2

                  Park_Lock_stop PROC
;;;34     
;;;35       void Park_Lock_stop(void)//停止开关锁
000000  2000              MOVS     r0,#0
;;;36      {
;;;37     	 MOTOR_A=0;
000002  4903              LDR      r1,|L4.16|
000004  6008              STR      r0,[r1,#0]
;;;38     	 MOTOR_B=0;
000006  4903              LDR      r1,|L4.20|
000008  f8c10184          STR      r0,[r1,#0x184]
;;;39      }
00000c  4770              BX       lr
;;;40     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x42220180
                  |L4.20|
                          DCD      0x42220000
