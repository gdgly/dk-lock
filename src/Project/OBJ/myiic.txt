; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\myiic.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\myiic.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\BSP\24CXX -I..\BSP\ADC -I..\BSP\GPS -I..\BSP\IIC -I..\BSP\RTC -I..\BSP\TIMER -I..\BSP\USART2 -I..\BSP\USART3 -I..\FLib\inc -I..\CORE -I..\SYS\sys -I..\SYS\delay -I..\SYS\usart -IE:\dk\HH-1\HH\Proj\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0 -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\obj\myiic.crf ..\BSP\IIC\myiic.c]
                          THUMB

                          AREA ||i.IIC_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Ack PROC
;;;79     //产生ACK应答
;;;80     void IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;81     {
;;;82     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L1.68|
000006  6008              STR      r0,[r1,#0]
;;;83     	SDA_OUT();
000008  480f              LDR      r0,|L1.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490d              LDR      r1,|L1.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;84     	IIC_SDA=0;
00001e  2000              MOVS     r0,#0
000020  490a              LDR      r1,|L1.76|
000022  f8c10184          STR      r0,[r1,#0x184]
;;;85     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;86     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L1.68|
000030  6008              STR      r0,[r1,#0]
;;;87     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;88     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L1.76|
00003c  f8c10180          STR      r0,[r1,#0x180]
;;;89     }
000040  bd10              POP      {r4,pc}
;;;90     //不产生ACK应答		    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x42218180
                  |L1.72|
                          DCD      0x40010c00
                  |L1.76|
                          DCD      0x42218000

                          AREA ||i.IIC_Init||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;16     //初始化IIC
;;;17     void IIC_Init(void)
000000  b508              PUSH     {r3,lr}
;;;18     {					     
;;;19     	GPIO_InitTypeDef GPIO_InitStructure;
;;;20     	//RCC->APB2ENR|=1<<4;//先使能外设IO PORTC时钟 
;;;21     	RCC_APB2PeriphClockCmd(	RCC_APB2Periph_GPIOB, ENABLE );	
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;22     	   
;;;23     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00000a  2001              MOVS     r0,#1
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;24     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   //推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;25     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;26     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  480b              LDR      r0,|L2.76|
000020  f7fffffe          BL       GPIO_Init
;;;27     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000024  2002              MOVS     r0,#2
000026  f8ad0000          STRH     r0,[sp,#0]
;;;28     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD ;   //推挽输出
00002a  2014              MOVS     r0,#0x14
00002c  f88d0003          STRB     r0,[sp,#3]
;;;29     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000030  2003              MOVS     r0,#3
000032  f88d0002          STRB     r0,[sp,#2]
;;;30     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4804              LDR      r0,|L2.76|
00003a  f7fffffe          BL       GPIO_Init
;;;31      
;;;32     	IIC_SCL=1;
00003e  2001              MOVS     r0,#1
000040  4903              LDR      r1,|L2.80|
000042  6008              STR      r0,[r1,#0]
;;;33     	IIC_SDA=1;
000044  4903              LDR      r1,|L2.84|
000046  f8c10184          STR      r0,[r1,#0x184]
;;;34     
;;;35     }
00004a  bd08              POP      {r3,pc}
;;;36     //产生IIC起始信号
                          ENDP

                  |L2.76|
                          DCD      0x40010c00
                  |L2.80|
                          DCD      0x42218180
                  |L2.84|
                          DCD      0x42218000

                          AREA ||i.IIC_NAck||, CODE, READONLY, ALIGN=2

                  IIC_NAck PROC
;;;90     //不产生ACK应答		    
;;;91     void IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;92     {
;;;93     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L3.68|
000006  6008              STR      r0,[r1,#0]
;;;94     	SDA_OUT();
000008  480f              LDR      r0,|L3.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490d              LDR      r1,|L3.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;95     	IIC_SDA=1;
00001e  2001              MOVS     r0,#1
000020  490a              LDR      r1,|L3.76|
000022  f8c10184          STR      r0,[r1,#0x184]
;;;96     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;97     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L3.68|
000030  6008              STR      r0,[r1,#0]
;;;98     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;99     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L3.76|
00003c  f8c10180          STR      r0,[r1,#0x180]
;;;100    }					 				     
000040  bd10              POP      {r4,pc}
;;;101    //IIC发送一个字节
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0x42218180
                  |L3.72|
                          DCD      0x40010c00
                  |L3.76|
                          DCD      0x42218000

                          AREA ||i.IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Read_Byte PROC
;;;121    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;122    u8 IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;123    {
000002  4605              MOV      r5,r0
;;;124    	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;125    	SDA_IN();//SDA设置为输入
000006  4817              LDR      r0,|L4.100|
000008  6800              LDR      r0,[r0,#0]
00000a  f02000f0          BIC      r0,r0,#0xf0
00000e  4915              LDR      r1,|L4.100|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0400080          ORR      r0,r0,#0x80
00001a  6008              STR      r0,[r1,#0]
;;;126        for(i=0;i<8;i++ )
00001c  2600              MOVS     r6,#0
00001e  e016              B        |L4.78|
                  |L4.32|
;;;127    	{
;;;128            IIC_SCL=0; 
000020  2000              MOVS     r0,#0
000022  4911              LDR      r1,|L4.104|
000024  6008              STR      r0,[r1,#0]
;;;129            delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;130    		IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  490f              LDR      r1,|L4.108|
000030  f8c10180          STR      r0,[r1,#0x180]
;;;131            receive<<=1;
000034  0660              LSLS     r0,r4,#25
000036  0e04              LSRS     r4,r0,#24
;;;132            if(READ_SDA)receive++;   
000038  480b              LDR      r0,|L4.104|
00003a  387c              SUBS     r0,r0,#0x7c
00003c  6800              LDR      r0,[r0,#0]
00003e  b108              CBZ      r0,|L4.68|
000040  1c60              ADDS     r0,r4,#1
000042  b2c4              UXTB     r4,r0
                  |L4.68|
;;;133    		delay_us(1); 
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       delay_us
00004a  1c70              ADDS     r0,r6,#1              ;126
00004c  b2c6              UXTB     r6,r0                 ;126
                  |L4.78|
00004e  2e08              CMP      r6,#8                 ;126
000050  dbe6              BLT      |L4.32|
;;;134        }					 
;;;135        if (!ack)
000052  b915              CBNZ     r5,|L4.90|
;;;136            IIC_NAck();//发送nACK
000054  f7fffffe          BL       IIC_NAck
000058  e001              B        |L4.94|
                  |L4.90|
;;;137        else
;;;138            IIC_Ack(); //发送ACK   
00005a  f7fffffe          BL       IIC_Ack
                  |L4.94|
;;;139        return receive;
00005e  4620              MOV      r0,r4
;;;140    }
000060  bd70              POP      {r4-r6,pc}
;;;141    
                          ENDP

000062  0000              DCW      0x0000
                  |L4.100|
                          DCD      0x40010c00
                  |L4.104|
                          DCD      0x42218180
                  |L4.108|
                          DCD      0x42218000

                          AREA ||i.IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Send_Byte PROC
;;;104    //0，无应答			  
;;;105    void IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;106    {                        
000002  4604              MOV      r4,r0
;;;107        u8 t;   
;;;108    	SDA_OUT(); 	    
000004  4815              LDR      r0,|L5.92|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4913              LDR      r1,|L5.92|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400030          ORR      r0,r0,#0x30
000018  6008              STR      r0,[r1,#0]
;;;109        IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  4910              LDR      r1,|L5.96|
00001e  6008              STR      r0,[r1,#0]
;;;110        for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e017              B        |L5.84|
                  |L5.36|
;;;111        {              
;;;112            IIC_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490e              LDR      r1,|L5.96|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;113            txd<<=1; 	  
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;114    		delay_us(2);   //对TEA5767这三个延时都是必须的
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       delay_us
;;;115    		IIC_SCL=1;
000036  2001              MOVS     r0,#1
000038  490a              LDR      r1,|L5.100|
00003a  f8c10180          STR      r0,[r1,#0x180]
;;;116    		delay_us(2); 
00003e  2002              MOVS     r0,#2
000040  f7fffffe          BL       delay_us
;;;117    		IIC_SCL=0;	
000044  2000              MOVS     r0,#0
000046  4906              LDR      r1,|L5.96|
000048  6008              STR      r0,[r1,#0]
;;;118    		delay_us(2);
00004a  2002              MOVS     r0,#2
00004c  f7fffffe          BL       delay_us
000050  1c68              ADDS     r0,r5,#1              ;110
000052  b2c5              UXTB     r5,r0                 ;110
                  |L5.84|
000054  2d08              CMP      r5,#8                 ;110
000056  dbe5              BLT      |L5.36|
;;;119        }	 
;;;120    } 	    
000058  bd70              POP      {r4-r6,pc}
;;;121    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40010c00
                  |L5.96|
                          DCD      0x42218180
                  |L5.100|
                          DCD      0x42218000

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;36     //产生IIC起始信号
;;;37     void IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;38     {
;;;39     	SDA_OUT();     //sda线输出
000002  480f              LDR      r0,|L6.64|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490d              LDR      r1,|L6.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;40     	IIC_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L6.68|
00001c  6008              STR      r0,[r1,#0]
;;;41     	IIC_SCL=1;
00001e  490a              LDR      r1,|L6.72|
000020  f8c10180          STR      r0,[r1,#0x180]
;;;42     	delay_us(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;43      	IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
00002a  2000              MOVS     r0,#0
00002c  4905              LDR      r1,|L6.68|
00002e  6008              STR      r0,[r1,#0]
;;;44     	delay_us(4);
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       delay_us
;;;45     	IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L6.72|
00003a  f8c10180          STR      r0,[r1,#0x180]
;;;46     }	  
00003e  bd10              POP      {r4,pc}
;;;47     //产生IIC停止信号
                          ENDP

                  |L6.64|
                          DCD      0x40010c00
                  |L6.68|
                          DCD      0x42218184
                  |L6.72|
                          DCD      0x42218000

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;47     //产生IIC停止信号
;;;48     void IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;49     {
;;;50     	SDA_OUT();//sda线输出
000002  480f              LDR      r0,|L7.64|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490d              LDR      r1,|L7.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;51     	IIC_SCL=0;
000018  2000              MOVS     r0,#0
00001a  490a              LDR      r1,|L7.68|
00001c  6008              STR      r0,[r1,#0]
;;;52     	IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
00001e  490a              LDR      r1,|L7.72|
000020  f8c10184          STR      r0,[r1,#0x184]
;;;53      	delay_us(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;54     	IIC_SCL=1; 
00002a  2001              MOVS     r0,#1
00002c  4905              LDR      r1,|L7.68|
00002e  6008              STR      r0,[r1,#0]
;;;55     	IIC_SDA=1;//发送I2C总线结束信号
000030  4905              LDR      r1,|L7.72|
000032  f8c10184          STR      r0,[r1,#0x184]
;;;56     	delay_us(4);							   	
000036  2004              MOVS     r0,#4
000038  f7fffffe          BL       delay_us
;;;57     }
00003c  bd10              POP      {r4,pc}
;;;58     //等待应答信号到来
                          ENDP

00003e  0000              DCW      0x0000
                  |L7.64|
                          DCD      0x40010c00
                  |L7.68|
                          DCD      0x42218180
                  |L7.72|
                          DCD      0x42218000

                          AREA ||i.IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Wait_Ack PROC
;;;60     //        0，接收应答成功
;;;61     u8 IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;64     	SDA_IN();      //SDA设置为输入  
000004  4814              LDR      r0,|L8.88|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4912              LDR      r1,|L8.88|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400080          ORR      r0,r0,#0x80
000018  6008              STR      r0,[r1,#0]
;;;65     	IIC_SDA=1;delay_us(1);	   
00001a  2001              MOVS     r0,#1
00001c  490f              LDR      r1,|L8.92|
00001e  6008              STR      r0,[r1,#0]
000020  f7fffffe          BL       delay_us
;;;66     	IIC_SCL=1;delay_us(1);	 
000024  2001              MOVS     r0,#1
000026  490e              LDR      r1,|L8.96|
000028  f8c10180          STR      r0,[r1,#0x180]
00002c  f7fffffe          BL       delay_us
;;;67     	while(READ_SDA)
000030  e007              B        |L8.66|
                  |L8.50|
;;;68     	{
;;;69     		ucErrTime++;
000032  1c60              ADDS     r0,r4,#1
000034  b2c4              UXTB     r4,r0
;;;70     		if(ucErrTime>250)
000036  2cfa              CMP      r4,#0xfa
000038  dd03              BLE      |L8.66|
;;;71     		{
;;;72     			IIC_Stop();
00003a  f7fffffe          BL       IIC_Stop
;;;73     			return 1;
00003e  2001              MOVS     r0,#1
                  |L8.64|
;;;74     		}
;;;75     	}
;;;76     	IIC_SCL=0;//时钟输出0 	   
;;;77     	return 0;  
;;;78     } 
000040  bd10              POP      {r4,pc}
                  |L8.66|
000042  4806              LDR      r0,|L8.92|
000044  3880              SUBS     r0,r0,#0x80           ;67
000046  6800              LDR      r0,[r0,#0]            ;67
000048  2800              CMP      r0,#0                 ;67
00004a  d1f2              BNE      |L8.50|
00004c  4903              LDR      r1,|L8.92|
00004e  1f09              SUBS     r1,r1,#4              ;76
000050  6008              STR      r0,[r1,#0]            ;76
000052  bf00              NOP                            ;77
000054  e7f4              B        |L8.64|
;;;79     //产生ACK应答
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      0x40010c00
                  |L8.92|
                          DCD      0x42218184
                  |L8.96|
                          DCD      0x42218000
