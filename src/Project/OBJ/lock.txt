; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lock.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\lock.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\driver -I..\BSP -I..\system -I..\tplib -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\app -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=.\obj\lock.crf ..\driver\lock.c]
                          THUMB

                          AREA ||i.lock_close||, CODE, READONLY, ALIGN=2

                  lock_close PROC
;;;27     
;;;28     void lock_close(void)
000000  b510              PUSH     {r4,lr}
;;;29     {
;;;30     	MOTOA_HIGH();
000002  2101              MOVS     r1,#1
000004  4803              LDR      r0,|L1.20|
000006  f7fffffe          BL       GPIO_SetBits
;;;31     	MOTOB_LOW();
00000a  2102              MOVS     r1,#2
00000c  4801              LDR      r0,|L1.20|
00000e  f7fffffe          BL       GPIO_ResetBits
;;;32     }
000012  bd10              POP      {r4,pc}
;;;33     
                          ENDP

                  |L1.20|
                          DCD      0x40011000

                          AREA ||i.lock_gpio_init||, CODE, READONLY, ALIGN=2

                  lock_gpio_init PROC
;;;8      
;;;9      void lock_gpio_init(void)
000000  b508              PUSH     {r3,lr}
;;;10     {
;;;11     	GPIO_InitTypeDef gpio_init_structure;
;;;12     		//button
;;;13     	gpio_init_structure.GPIO_Pin = GPIO_Pin_6;
000002  2040              MOVS     r0,#0x40
000004  f8ad0000          STRH     r0,[sp,#0]
;;;14       	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0002          STRB     r0,[sp,#2]
;;;15     	gpio_init_structure.GPIO_Mode = GPIO_Mode_IPU;          
00000e  2048              MOVS     r0,#0x48
000010  f88d0003          STRB     r0,[sp,#3]
;;;16       	GPIO_Init(GPIOC, &gpio_init_structure);
000014  4669              MOV      r1,sp
000016  4802              LDR      r0,|L2.32|
000018  f7fffffe          BL       GPIO_Init
;;;17     }
00001c  bd08              POP      {r3,pc}
;;;18     
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x40011000

                          AREA ||i.lock_off_status_get||, CODE, READONLY, ALIGN=2

                  lock_off_status_get PROC
;;;69     
;;;70     u8 lock_off_status_get(void)
000000  b570              PUSH     {r4-r6,lr}
;;;71     {
;;;72     	u8 i = 0;
000002  2400              MOVS     r4,#0
;;;73     	u8 ret = 0;
000004  2600              MOVS     r6,#0
;;;74     	u8 cnt = 0;
000006  2500              MOVS     r5,#0
;;;75     	
;;;76     	for(i=0; i<30; i++)
000008  bf00              NOP      
00000a  e00a              B        |L3.34|
                  |L3.12|
;;;77     	{
;;;78     		if(LOCK_OFF_READ() == 0)
00000c  2120              MOVS     r1,#0x20
00000e  4809              LDR      r0,|L3.52|
000010  f7fffffe          BL       GPIO_ReadInputDataBit
000014  b910              CBNZ     r0,|L3.28|
;;;79     		{
;;;80     			cnt++;
000016  1c68              ADDS     r0,r5,#1
000018  b2c5              UXTB     r5,r0
00001a  e000              B        |L3.30|
                  |L3.28|
;;;81     		}
;;;82     		else
;;;83     		{
;;;84     			cnt = 0;
00001c  2500              MOVS     r5,#0
                  |L3.30|
00001e  1c60              ADDS     r0,r4,#1              ;76
000020  b2c4              UXTB     r4,r0                 ;76
                  |L3.34|
000022  2c1e              CMP      r4,#0x1e              ;76
000024  dbf2              BLT      |L3.12|
;;;85     		}
;;;86     	}
;;;87     	if(cnt >= 10)
000026  2d0a              CMP      r5,#0xa
000028  db01              BLT      |L3.46|
;;;88     	{
;;;89     		ret = 0;
00002a  2600              MOVS     r6,#0
00002c  e000              B        |L3.48|
                  |L3.46|
;;;90     	}
;;;91     	else
;;;92     	{
;;;93     		ret = 1;
00002e  2601              MOVS     r6,#1
                  |L3.48|
;;;94     	}
;;;95     	
;;;96     	return ret;
000030  4630              MOV      r0,r6
;;;97     }
000032  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP

                  |L3.52|
                          DCD      0x40010800

                          AREA ||i.lock_on_status_get||, CODE, READONLY, ALIGN=2

                  lock_on_status_get PROC
;;;39     
;;;40     u8 lock_on_status_get(void)
000000  b570              PUSH     {r4-r6,lr}
;;;41     {
;;;42     	u8 i = 0;
000002  2400              MOVS     r4,#0
;;;43     	u8 ret = 0;
000004  2600              MOVS     r6,#0
;;;44     	u8 cnt = 0;
000006  2500              MOVS     r5,#0
;;;45     	for(i=0; i<30; i++)
000008  bf00              NOP      
00000a  e00a              B        |L4.34|
                  |L4.12|
;;;46     	{
;;;47     		if(LOCK_ON_READ() == 0)
00000c  2110              MOVS     r1,#0x10
00000e  4809              LDR      r0,|L4.52|
000010  f7fffffe          BL       GPIO_ReadInputDataBit
000014  b910              CBNZ     r0,|L4.28|
;;;48     		{
;;;49     			cnt++;
000016  1c68              ADDS     r0,r5,#1
000018  b2c5              UXTB     r5,r0
00001a  e000              B        |L4.30|
                  |L4.28|
;;;50     		}
;;;51     		else
;;;52     		{
;;;53     			cnt = 0;
00001c  2500              MOVS     r5,#0
                  |L4.30|
00001e  1c60              ADDS     r0,r4,#1              ;45
000020  b2c4              UXTB     r4,r0                 ;45
                  |L4.34|
000022  2c1e              CMP      r4,#0x1e              ;45
000024  dbf2              BLT      |L4.12|
;;;54     		}
;;;55     	}
;;;56     	
;;;57     	if(cnt >= 10)
000026  2d0a              CMP      r5,#0xa
000028  db01              BLT      |L4.46|
;;;58     	{
;;;59     		ret = 0;
00002a  2600              MOVS     r6,#0
00002c  e000              B        |L4.48|
                  |L4.46|
;;;60     	}
;;;61     	else
;;;62     	{
;;;63     		ret = 1;
00002e  2601              MOVS     r6,#1
                  |L4.48|
;;;64     	}
;;;65     	
;;;66     	return ret;
000030  4630              MOV      r0,r6
;;;67     }
000032  bd70              POP      {r4-r6,pc}
;;;68     
                          ENDP

                  |L4.52|
                          DCD      0x40010800

                          AREA ||i.lock_open||, CODE, READONLY, ALIGN=2

                  lock_open PROC
;;;21     
;;;22     void lock_open(void)
000000  b510              PUSH     {r4,lr}
;;;23     {
;;;24     	MOTOA_LOW();
000002  2101              MOVS     r1,#1
000004  4803              LDR      r0,|L5.20|
000006  f7fffffe          BL       GPIO_ResetBits
;;;25     	MOTOB_HIGH();
00000a  2102              MOVS     r1,#2
00000c  4801              LDR      r0,|L5.20|
00000e  f7fffffe          BL       GPIO_SetBits
;;;26     }
000012  bd10              POP      {r4,pc}
;;;27     
                          ENDP

                  |L5.20|
                          DCD      0x40011000

                          AREA ||i.lock_stop||, CODE, READONLY, ALIGN=2

                  lock_stop PROC
;;;33     
;;;34     void lock_stop(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     	MOTOA_LOW();
000002  2101              MOVS     r1,#1
000004  4803              LDR      r0,|L6.20|
000006  f7fffffe          BL       GPIO_ResetBits
;;;37     	MOTOB_LOW();
00000a  2102              MOVS     r1,#2
00000c  4801              LDR      r0,|L6.20|
00000e  f7fffffe          BL       GPIO_ResetBits
;;;38     }
000012  bd10              POP      {r4,pc}
;;;39     
                          ENDP

                  |L6.20|
                          DCD      0x40011000
