; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\common_1.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\common_1.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\driver -I..\BSP -I..\system -I..\tplib -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\app -I..\MQTT -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=.\obj\common_1.crf ..\system\common.c]
                          THUMB

                          AREA ||i.delay||, CODE, READONLY, ALIGN=1

                  delay PROC
;;;35     */
;;;36     void delay(uint32_t count)
000000  bf00              NOP      
                  |L1.2|
;;;37     {
;;;38     	while(count--);
000002  1e01              SUBS     r1,r0,#0
000004  f1a00001          SUB      r0,r0,#1
000008  d1fb              BNE      |L1.2|
;;;39     }
00000a  4770              BX       lr
;;;40     
                          ENDP


                          AREA ||i.itoa||, CODE, READONLY, ALIGN=1

                  itoa PROC
;;;182    */
;;;183    char *itoa(int value, char *string, int radix)
000000  b5f0              PUSH     {r4-r7,lr}
;;;184    {
000002  4603              MOV      r3,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;185        int     i, d;
;;;186        int     flag = 0;
000008  2700              MOVS     r7,#0
;;;187        char    *ptr = string;
00000a  4629              MOV      r1,r5
;;;188    
;;;189        if (radix != 10)
00000c  2e0a              CMP      r6,#0xa
00000e  d003              BEQ      |L2.24|
;;;190        {
;;;191            *ptr = 0;
000010  2000              MOVS     r0,#0
000012  7008              STRB     r0,[r1,#0]
;;;192            return string;
000014  4628              MOV      r0,r5
                  |L2.22|
;;;193        }
;;;194    
;;;195        if (!value)
;;;196        {
;;;197            *ptr++ = 0x30;
;;;198            *ptr = 0;
;;;199            return string;
;;;200        }
;;;201    
;;;202    
;;;203        if (value < 0)
;;;204        {
;;;205            *ptr++ = '-';
;;;206    		
;;;207            value *= -1;
;;;208        }
;;;209    
;;;210        for (i = 10000; i > 0; i /= 10)
;;;211        {
;;;212            d = value / i;
;;;213    
;;;214            if (d || flag)
;;;215            {
;;;216                *ptr++ = (char)(d + 0x30);
;;;217                value -= (d * i);
;;;218                flag = 1;
;;;219            }
;;;220        }
;;;221    
;;;222        *ptr = 0;
;;;223    
;;;224        return string;
;;;225    } 
000016  bdf0              POP      {r4-r7,pc}
                  |L2.24|
000018  b933              CBNZ     r3,|L2.40|
00001a  2030              MOVS     r0,#0x30              ;197
00001c  f8010b01          STRB     r0,[r1],#1            ;197
000020  2000              MOVS     r0,#0                 ;198
000022  7008              STRB     r0,[r1,#0]            ;198
000024  4628              MOV      r0,r5                 ;199
000026  e7f6              B        |L2.22|
                  |L2.40|
000028  2b00              CMP      r3,#0                 ;203
00002a  da03              BGE      |L2.52|
00002c  202d              MOVS     r0,#0x2d              ;205
00002e  f8010b01          STRB     r0,[r1],#1            ;205
000032  425b              RSBS     r3,r3,#0              ;207
                  |L2.52|
000034  f2427210          MOV      r2,#0x2710            ;210
000038  e00d              B        |L2.86|
                  |L2.58|
00003a  fb93f4f2          SDIV     r4,r3,r2              ;212
00003e  b904              CBNZ     r4,|L2.66|
000040  b137              CBZ      r7,|L2.80|
                  |L2.66|
000042  f1040030          ADD      r0,r4,#0x30           ;216
000046  f8010b01          STRB     r0,[r1],#1            ;216
00004a  fb043312          MLS      r3,r4,r2,r3           ;217
00004e  2701              MOVS     r7,#1                 ;218
                  |L2.80|
000050  200a              MOVS     r0,#0xa               ;210
000052  fb92f2f0          SDIV     r2,r2,r0              ;210
                  |L2.86|
000056  2a00              CMP      r2,#0                 ;210
000058  dcef              BGT      |L2.58|
00005a  2000              MOVS     r0,#0                 ;222
00005c  7008              STRB     r0,[r1,#0]            ;222
00005e  4628              MOV      r0,r5                 ;224
000060  e7d9              B        |L2.22|
;;;226    
                          ENDP


                          AREA ||i.mem_picked||, CODE, READONLY, ALIGN=1

                  mem_picked PROC
;;;100    */
;;;101    uint8_t *mem_picked(uint8_t *src_str, uint8_t *sub_str, uint16_t len, uint8_t *dst_str)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;102    {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4692              MOV      r10,r2
00000a  461f              MOV      r7,r3
;;;103    	uint8_t *tmp1 = NULL, *tmp2 = NULL, *str = src_str;
00000c  2500              MOVS     r5,#0
00000e  46ab              MOV      r11,r5
000010  46b0              MOV      r8,r6
;;;104    	uint8_t i = 0; 
000012  46a9              MOV      r9,r5
;;;105    	
;;;106    	tmp1 = (uint8_t*)mem_str((char*)str, 512, (char*)sub_str);
000014  4622              MOV      r2,r4
000016  f44f7100          MOV      r1,#0x200
00001a  4640              MOV      r0,r8
00001c  f7fffffe          BL       mem_str
000020  4605              MOV      r5,r0
;;;107    	if ((tmp1 == NULL) || (str == NULL))
000022  b115              CBZ      r5,|L3.42|
000024  f1b80f00          CMP      r8,#0
000028  d102              BNE      |L3.48|
                  |L3.42|
;;;108    	{
;;;109    		return NULL;
00002a  2000              MOVS     r0,#0
                  |L3.44|
;;;110    	}
;;;111    
;;;112    	for(i=0; i<strlen((char*)sub_str); i++)
;;;113    	{
;;;114    		tmp1++;
;;;115    	}
;;;116    
;;;117    	memcpy(dst_str, tmp1, len);
;;;118    	
;;;119    	return str;
;;;120    }
00002c  e8bd9ff0          POP      {r4-r12,pc}
                  |L3.48|
000030  f04f0900          MOV      r9,#0                 ;112
000034  e004              B        |L3.64|
                  |L3.54|
000036  1c6d              ADDS     r5,r5,#1              ;114
000038  f1090001          ADD      r0,r9,#1              ;112
00003c  f00009ff          AND      r9,r0,#0xff           ;112
                  |L3.64|
000040  4620              MOV      r0,r4                 ;112
000042  f7fffffe          BL       strlen
000046  4548              CMP      r0,r9                 ;112
000048  d8f5              BHI      |L3.54|
00004a  4652              MOV      r2,r10                ;117
00004c  4629              MOV      r1,r5                 ;117
00004e  4638              MOV      r0,r7                 ;117
000050  f7fffffe          BL       __aeabi_memcpy
000054  4640              MOV      r0,r8                 ;119
000056  e7e9              B        |L3.44|
;;;121    
                          ENDP


                          AREA ||i.mem_str||, CODE, READONLY, ALIGN=1

                  mem_str PROC
;;;136    */
;;;137    char *mem_str(char *mem, int mem_len, char *sub_str)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;138    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
;;;139    	int sub_len = 0;
00000a  f04f0900          MOV      r9,#0
;;;140    	int i;
;;;141    	char *cur_pos = mem;
00000e  4635              MOV      r5,r6
;;;142    	int last_pos = 0;
000010  46ca              MOV      r10,r9
;;;143    	
;;;144    	if (mem == NULL || mem_len <= 0 || sub_str == NULL)
000012  b116              CBZ      r6,|L4.26|
000014  2f00              CMP      r7,#0
000016  dd00              BLE      |L4.26|
000018  b914              CBNZ     r4,|L4.32|
                  |L4.26|
;;;145    	{
;;;146    		return NULL;
00001a  2000              MOVS     r0,#0
                  |L4.28|
;;;147    	}
;;;148    	
;;;149    	if (*sub_str == '\0')
;;;150    	{
;;;151    		return NULL;
;;;152    	}
;;;153    	
;;;154    	sub_len = strlen(sub_str);
;;;155    	last_pos = mem_len - sub_len + 1;
;;;156    	
;;;157    	for (i=0; i<last_pos; i++)
;;;158    	{
;;;159    		if (*cur_pos == *sub_str)
;;;160    		{
;;;161    			if (memcmp(cur_pos, sub_str, sub_len) == 0)
;;;162    			{
;;;163    				return cur_pos;
;;;164    			}
;;;165    		}
;;;166    		cur_pos++;
;;;167    	}
;;;168    
;;;169    	return NULL;
;;;170    }
00001c  e8bd87f0          POP      {r4-r10,pc}
                  |L4.32|
000020  7820              LDRB     r0,[r4,#0]            ;149
000022  b908              CBNZ     r0,|L4.40|
000024  2000              MOVS     r0,#0                 ;151
000026  e7f9              B        |L4.28|
                  |L4.40|
000028  4620              MOV      r0,r4                 ;154
00002a  f7fffffe          BL       strlen
00002e  4681              MOV      r9,r0                 ;154
000030  eba70009          SUB      r0,r7,r9              ;155
000034  f1000a01          ADD      r10,r0,#1             ;155
000038  f04f0800          MOV      r8,#0                 ;157
00003c  e00e              B        |L4.92|
                  |L4.62|
00003e  7828              LDRB     r0,[r5,#0]            ;159
000040  7821              LDRB     r1,[r4,#0]            ;159
000042  4288              CMP      r0,r1                 ;159
000044  d107              BNE      |L4.86|
000046  464a              MOV      r2,r9                 ;161
000048  4621              MOV      r1,r4                 ;161
00004a  4628              MOV      r0,r5                 ;161
00004c  f7fffffe          BL       memcmp
000050  b908              CBNZ     r0,|L4.86|
000052  4628              MOV      r0,r5                 ;163
000054  e7e2              B        |L4.28|
                  |L4.86|
000056  1c6d              ADDS     r5,r5,#1              ;166
000058  f1080801          ADD      r8,r8,#1              ;157
                  |L4.92|
00005c  45d0              CMP      r8,r10                ;157
00005e  dbee              BLT      |L4.62|
000060  2000              MOVS     r0,#0                 ;169
000062  e7db              B        |L4.28|
;;;171    
                          ENDP


                          AREA ||i.memcat||, CODE, READONLY, ALIGN=1

                  memcat PROC
;;;227    
;;;228    char *memcat(void *dest, size_t dest_len, const char *src, size_t src_len)
000000  b510              PUSH     {r4,lr}
;;;229    {
000002  4604              MOV      r4,r0
;;;230    
;;;231    //	memcpy(dest+dest_len, src, src_len);
;;;232    
;;;233    //	return dest;
;;;234    
;;;235    }
000004  bd10              POP      {r4,pc}
;;;236    
                          ENDP


                          AREA ||i.str_picked||, CODE, READONLY, ALIGN=1

                  str_picked PROC
;;;54     */
;;;55     char *str_picked(char *src_str, char *sub_str1, char *sub_str2, char *dst_str)
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;56     {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  461d              MOV      r5,r3
;;;57     	char *tmp1 = NULL, *tmp2 = NULL, *str = src_str;
00000a  2400              MOVS     r4,#0
00000c  46a1              MOV      r9,r4
00000e  46ba              MOV      r10,r7
;;;58     	int i = 0; 
000010  46a3              MOV      r11,r4
;;;59     	int index = 0;
000012  2600              MOVS     r6,#0
;;;60     				
;;;61     	tmp1 = (uint8_t*)strstr((char*)str, (char*)sub_str1);
000014  4641              MOV      r1,r8
000016  4650              MOV      r0,r10
000018  f7fffffe          BL       strstr
00001c  4604              MOV      r4,r0
;;;62     
;;;63     	if ((tmp1 == NULL) || (str == NULL))
00001e  b114              CBZ      r4,|L6.38|
000020  f1ba0f00          CMP      r10,#0
000024  d103              BNE      |L6.46|
                  |L6.38|
;;;64     	{
;;;65     		return NULL;
000026  2000              MOVS     r0,#0
                  |L6.40|
;;;66     	}
;;;67     
;;;68     	for(i=0; i<strlen((char*)sub_str1); i++)
;;;69     	{
;;;70     		tmp1++;
;;;71     	}
;;;72     
;;;73     	tmp2 = (uint8_t*)strstr((char*)tmp1, (char*)sub_str2);
;;;74     	if (tmp2 == NULL)
;;;75     	{
;;;76     		return NULL;
;;;77     	}
;;;78     
;;;79     	while (tmp1 != tmp2)
;;;80     	{
;;;81     		dst_str[index] = *tmp1++;
;;;82     		index++;
;;;83     	}
;;;84     	dst_str[index] = '\0';
;;;85     	
;;;86     	return dst_str;
;;;87     }
000028  b004              ADD      sp,sp,#0x10
00002a  e8bd9ff0          POP      {r4-r12,pc}
                  |L6.46|
00002e  f04f0b00          MOV      r11,#0                ;68
000032  e002              B        |L6.58|
                  |L6.52|
000034  1c64              ADDS     r4,r4,#1              ;70
000036  f10b0b01          ADD      r11,r11,#1            ;68
                  |L6.58|
00003a  4640              MOV      r0,r8                 ;68
00003c  f7fffffe          BL       strlen
000040  4558              CMP      r0,r11                ;68
000042  d8f7              BHI      |L6.52|
000044  4620              MOV      r0,r4                 ;73
000046  9902              LDR      r1,[sp,#8]            ;73
000048  f7fffffe          BL       strstr
00004c  4681              MOV      r9,r0                 ;73
00004e  f1b90f00          CMP      r9,#0                 ;74
000052  d101              BNE      |L6.88|
000054  2000              MOVS     r0,#0                 ;76
000056  e7e7              B        |L6.40|
                  |L6.88|
000058  e003              B        |L6.98|
                  |L6.90|
00005a  f8140b01          LDRB     r0,[r4],#1            ;81
00005e  55a8              STRB     r0,[r5,r6]            ;81
000060  1c76              ADDS     r6,r6,#1              ;82
                  |L6.98|
000062  454c              CMP      r4,r9                 ;79
000064  d1f9              BNE      |L6.90|
000066  2000              MOVS     r0,#0                 ;84
000068  55a8              STRB     r0,[r5,r6]            ;84
00006a  4628              MOV      r0,r5                 ;86
00006c  e7dc              B        |L6.40|
;;;88     
                          ENDP

