; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\key.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\FLib\inc -I..\CORE -I..\driver -I..\BSP -I..\SYS -I..\tplib -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=..\obj\key.crf ..\driver\key.c]
                          THUMB

                          AREA ||i.Hand_Lock||, CODE, READONLY, ALIGN=2

                  Hand_Lock PROC
;;;57     
;;;58      void Hand_Lock(void)
000000  b510              PUSH     {r4,lr}
;;;59     {
;;;60     	if(HAND==0&&LOCK_OFF==0)//关锁/顺时针
000002  2140              MOVS     r1,#0x40
000004  480e              LDR      r0,|L1.64|
000006  f7fffffe          BL       GPIO_ReadInputDataBit
00000a  b948              CBNZ     r0,|L1.32|
00000c  2120              MOVS     r1,#0x20
00000e  480d              LDR      r0,|L1.68|
000010  f7fffffe          BL       GPIO_ReadInputDataBit
000014  b920              CBNZ     r0,|L1.32|
;;;61     	{
;;;62     		Hand_Flag=1;
000016  2001              MOVS     r0,#1
000018  490b              LDR      r1,|L1.72|
00001a  7008              STRB     r0,[r1,#0]
;;;63     		Park_Lock_Close();
00001c  f7fffffe          BL       Park_Lock_Close
                  |L1.32|
;;;64     	}
;;;65     	if(LOCK_ON==0&&Hand_Flag==1)
000020  2110              MOVS     r1,#0x10
000022  4808              LDR      r0,|L1.68|
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  b940              CBNZ     r0,|L1.60|
00002a  4807              LDR      r0,|L1.72|
00002c  7800              LDRB     r0,[r0,#0]  ; Hand_Flag
00002e  2801              CMP      r0,#1
000030  d104              BNE      |L1.60|
;;;66     	{
;;;67     		Park_Lock_stop();
000032  f7fffffe          BL       Park_Lock_stop
;;;68     		Hand_Flag=0;
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L1.72|
00003a  7008              STRB     r0,[r1,#0]
                  |L1.60|
;;;69     	}
;;;70     }
00003c  bd10              POP      {r4,pc}
;;;71     
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0x40011000
                  |L1.68|
                          DCD      0x40010800
                  |L1.72|
                          DCD      Hand_Flag

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;8      //PA0.15和PC5 设置成输入
;;;9      void KEY_Init(void)
000000  b508              PUSH     {r3,lr}
;;;10     {
;;;11     	
;;;12     	GPIO_InitTypeDef GPIO_InitStructure;
;;;13     
;;;14      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);//使能PORTA,PORTC时钟
000002  2101              MOVS     r1,#1
000004  2014              MOVS     r0,#0x14
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;15     
;;;16     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//关闭jtag，使能SWD，可以用SWD模式调试
00000a  2101              MOVS     r1,#1
00000c  480b              LDR      r0,|L2.60|
00000e  f7fffffe          BL       GPIO_PinRemapConfig
;;;17     	//锁是不是已经到位
;;;18     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_4|GPIO_Pin_5;//PA4，PA5
000012  2030              MOVS     r0,#0x30
000014  f8ad0000          STRH     r0,[sp,#0]
;;;19     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //设置成上拉输入
000018  2048              MOVS     r0,#0x48
00001a  f88d0003          STRB     r0,[sp,#3]
;;;20      	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA15
00001e  4669              MOV      r1,sp
000020  4807              LDR      r0,|L2.64|
000022  f7fffffe          BL       GPIO_Init
;;;21     	//手动输入
;;;22     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_6;//PC6
000026  2040              MOVS     r0,#0x40
000028  f8ad0000          STRH     r0,[sp,#0]
;;;23     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //设置成上拉输入
00002c  2048              MOVS     r0,#0x48
00002e  f88d0003          STRB     r0,[sp,#3]
;;;24      	GPIO_Init(GPIOC, &GPIO_InitStructure);//初始化GPIOC5
000032  4669              MOV      r1,sp
000034  4803              LDR      r0,|L2.68|
000036  f7fffffe          BL       GPIO_Init
;;;25      
;;;26     //	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;//PA0
;;;27     //	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //PA0设置成输入，默认下拉	  
;;;28     //	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.0
;;;29     	
;;;30     } 
00003a  bd08              POP      {r3,pc}
;;;31     //按键处理函数
                          ENDP

                  |L2.60|
                          DCD      0x00300200
                  |L2.64|
                          DCD      0x40010800
                  |L2.68|
                          DCD      0x40011000

                          AREA ||i.KEY_Scan||, CODE, READONLY, ALIGN=2

                  KEY_Scan PROC
;;;41     
;;;42     u8 KEY_Scan(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;43     {	 
000002  4604              MOV      r4,r0
;;;44     	static u8 key_up=1;//按键按松开标志
;;;45     	if(mode)key_up=1;  //支持连按		  
000004  b114              CBZ      r4,|L3.12|
000006  2001              MOVS     r0,#1
000008  4920              LDR      r1,|L3.140|
00000a  7008              STRB     r0,[r1,#0]
                  |L3.12|
;;;46     	if(key_up&&(HAND==0||LOCK_OFF==0||LOCK_ON==0))
00000c  481f              LDR      r0,|L3.140|
00000e  7800              LDRB     r0,[r0,#0]  ; key_up
000010  b330              CBZ      r0,|L3.96|
000012  2140              MOVS     r1,#0x40
000014  481e              LDR      r0,|L3.144|
000016  f7fffffe          BL       GPIO_ReadInputDataBit
00001a  b148              CBZ      r0,|L3.48|
00001c  2120              MOVS     r1,#0x20
00001e  481d              LDR      r0,|L3.148|
000020  f7fffffe          BL       GPIO_ReadInputDataBit
000024  b120              CBZ      r0,|L3.48|
000026  2110              MOVS     r1,#0x10
000028  481a              LDR      r0,|L3.148|
00002a  f7fffffe          BL       GPIO_ReadInputDataBit
00002e  b9b8              CBNZ     r0,|L3.96|
                  |L3.48|
;;;47     	{
;;;48     		//printf("123156465\r\n");
;;;49     //		delay_ms(10);//去抖动 
;;;50     		key_up=0;
000030  2000              MOVS     r0,#0
000032  4916              LDR      r1,|L3.140|
000034  7008              STRB     r0,[r1,#0]
;;;51     		if(HAND==0)return HAND_1;
000036  2140              MOVS     r1,#0x40
000038  4815              LDR      r0,|L3.144|
00003a  f7fffffe          BL       GPIO_ReadInputDataBit
00003e  b908              CBNZ     r0,|L3.68|
000040  2001              MOVS     r0,#1
                  |L3.66|
;;;52     		else if(LOCK_OFF==0)return LOCK_OFF_4;
;;;53     		else if(LOCK_ON==0)return LOCK_ON_2; 
;;;54     	}else if(HAND==1&&LOCK_OFF==1&&LOCK_ON==1)key_up=1; 	     
;;;55     	return 0;// 无按键按下
;;;56     }
000042  bd10              POP      {r4,pc}
                  |L3.68|
000044  2120              MOVS     r1,#0x20              ;52
000046  4813              LDR      r0,|L3.148|
000048  f7fffffe          BL       GPIO_ReadInputDataBit
00004c  b908              CBNZ     r0,|L3.82|
00004e  2004              MOVS     r0,#4                 ;52
000050  e7f7              B        |L3.66|
                  |L3.82|
000052  2110              MOVS     r1,#0x10              ;53
000054  480f              LDR      r0,|L3.148|
000056  f7fffffe          BL       GPIO_ReadInputDataBit
00005a  b9a8              CBNZ     r0,|L3.136|
00005c  2002              MOVS     r0,#2                 ;53
00005e  e7f0              B        |L3.66|
                  |L3.96|
000060  2140              MOVS     r1,#0x40              ;54
000062  480b              LDR      r0,|L3.144|
000064  f7fffffe          BL       GPIO_ReadInputDataBit
000068  2801              CMP      r0,#1                 ;54
00006a  d10d              BNE      |L3.136|
00006c  2120              MOVS     r1,#0x20              ;54
00006e  4809              LDR      r0,|L3.148|
000070  f7fffffe          BL       GPIO_ReadInputDataBit
000074  2801              CMP      r0,#1                 ;54
000076  d107              BNE      |L3.136|
000078  2110              MOVS     r1,#0x10              ;54
00007a  4806              LDR      r0,|L3.148|
00007c  f7fffffe          BL       GPIO_ReadInputDataBit
000080  2801              CMP      r0,#1                 ;54
000082  d101              BNE      |L3.136|
000084  4901              LDR      r1,|L3.140|
000086  7008              STRB     r0,[r1,#0]            ;54
                  |L3.136|
000088  2000              MOVS     r0,#0                 ;55
00008a  e7da              B        |L3.66|
;;;57     
                          ENDP

                  |L3.140|
                          DCD      key_up
                  |L3.144|
                          DCD      0x40011000
                  |L3.148|
                          DCD      0x40010800

                          AREA ||.data||, DATA, ALIGN=0

                  Hand_Flag
000000  00                DCB      0x00
                  key_up
000001  01                DCB      0x01
