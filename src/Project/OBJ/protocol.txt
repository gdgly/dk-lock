; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\protocol.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\protocol.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\driver -I..\BSP -I..\system -I..\tplib -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\app -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=.\obj\protocol.crf ..\app\protocol.c]
                          THUMB

                          AREA ||i.protocol_analyze||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  protocol_analyze PROC
;;;17     
;;;18     void protocol_analyze(void)
000000  b530              PUSH     {r4,r5,lr}
;;;19     {
000002  b0cf              SUB      sp,sp,#0x13c
;;;20     	mqtt_telegram_t mt;
;;;21     	
;;;22     	u8 topic_tmp[100] = {0};
000004  2164              MOVS     r1,#0x64
000006  a833              ADD      r0,sp,#0xcc
000008  f7fffffe          BL       __aeabi_memclr4
;;;23     	u8 topic[100] = {0};
00000c  2164              MOVS     r1,#0x64
00000e  a81a              ADD      r0,sp,#0x68
000010  f7fffffe          BL       __aeabi_memclr4
;;;24     	u8 buff[100] = {0};
000014  2164              MOVS     r1,#0x64
000016  a801              ADD      r0,sp,#4
000018  f7fffffe          BL       __aeabi_memclr4
;;;25     	u16 data_len = 0;
00001c  2500              MOVS     r5,#0
;;;26     	u8 *par = NULL;
00001e  2400              MOVS     r4,#0
;;;27     	usart2_recv_data();
000020  f7fffffe          BL       usart2_recv_data
;;;28     		
;;;29     	//topic: lock/0018131408143929,1
;;;30     	par = strstr((char *)protocol_buff, "topic:");
000024  a116              ADR      r1,|L1.128|
000026  4818              LDR      r0,|L1.136|
000028  f7fffffe          BL       strstr
00002c  4604              MOV      r4,r0
;;;31     	
;;;32     	if(par != NULL)
00002e  b13c              CBZ      r4,|L1.64|
;;;33     	{
;;;34     		par = str_picked(protocol_buff, "topic:", ",", mt.topic);
000030  a216              ADR      r2,|L1.140|
000032  a113              ADR      r1,|L1.128|
000034  4814              LDR      r0,|L1.136|
000036  9b4d              LDR      r3,[sp,#0x134]
000038  f7fffffe          BL       str_picked
00003c  4604              MOV      r4,r0
;;;35     		if(par != NULL)
00003e  bf00              NOP      
                  |L1.64|
;;;36     		{
;;;37     			
;;;38     		}
;;;39     	}
;;;40     	
;;;41     	sprintf((char*)topic, "%s%s", "lock/", PARK_LOCK_Buffer);
000040  4b13              LDR      r3,|L1.144|
000042  a214              ADR      r2,|L1.148|
000044  a115              ADR      r1,|L1.156|
000046  a81a              ADD      r0,sp,#0x68
000048  f7fffffe          BL       __2sprintf
;;;42     	
;;;43     	if(strcmp(topic_tmp, topic) == 0)
00004c  a91a              ADD      r1,sp,#0x68
00004e  a833              ADD      r0,sp,#0xcc
000050  f7fffffe          BL       strcmp
;;;44     	{
;;;45     		
;;;46     	}
;;;47     	if(strstr((char *)usart2_buff, "+STATUS: MQTT CLOSE") != NULL)
000054  a113              ADR      r1,|L1.164|
000056  4818              LDR      r0,|L1.184|
000058  f7fffffe          BL       strstr
00005c  b968              CBNZ     r0,|L1.122|
;;;48     	{
;;;49     		
;;;50     	}
;;;51     	else if(strstr((char *)usart2_buff, (char*)topic) != NULL)
00005e  a91a              ADD      r1,sp,#0x68
000060  4815              LDR      r0,|L1.184|
000062  f7fffffe          BL       strstr
000066  b140              CBZ      r0,|L1.122|
;;;52     	{
;;;53     		if(LOCK_ON_READ()==0 || LOCK_OFF_READ() == 0)
000068  2110              MOVS     r1,#0x10
00006a  4814              LDR      r0,|L1.188|
00006c  f7fffffe          BL       GPIO_ReadInputDataBit
000070  b118              CBZ      r0,|L1.122|
000072  2120              MOVS     r1,#0x20
000074  4811              LDR      r0,|L1.188|
000076  f7fffffe          BL       GPIO_ReadInputDataBit
                  |L1.122|
;;;54     		{
;;;55     			
;;;56     			
;;;57     		}
;;;58     	}
;;;59     
;;;60     
;;;61     }
00007a  b04f              ADD      sp,sp,#0x13c
00007c  bd30              POP      {r4,r5,pc}
;;;62     
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
000080  746f7069          DCB      "topic:",0
000084  633a00  
000087  00                DCB      0
                  |L1.136|
                          DCD      protocol_buff
                  |L1.140|
00008c  2c00              DCB      ",",0
00008e  00                DCB      0
00008f  00                DCB      0
                  |L1.144|
                          DCD      PARK_LOCK_Buffer
                  |L1.148|
000094  6c6f636b          DCB      "lock/",0
000098  2f00    
00009a  00                DCB      0
00009b  00                DCB      0
                  |L1.156|
00009c  25732573          DCB      "%s%s",0
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L1.164|
0000a4  2b535441          DCB      "+STATUS: MQTT CLOSE",0
0000a8  5455533a
0000ac  204d5154
0000b0  5420434c
0000b4  4f534500
                  |L1.184|
                          DCD      usart2_buff
                  |L1.188|
                          DCD      0x40010800
