; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\driver -I..\BSP -I..\system -I..\tplib -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\app -I..\MQTT -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=.\obj\bsp.crf ..\BSP\bsp.c]
                          THUMB

                          AREA ||i.bsp_init||, CODE, READONLY, ALIGN=1

                  bsp_init PROC
;;;261    */
;;;262    void bsp_init(void)
000000  b510              PUSH     {r4,lr}
;;;263    {
;;;264    	bsp_rcc_init();
000002  f7fffffe          BL       bsp_rcc_init
;;;265    	bsp_nvic_init();
000006  f7fffffe          BL       bsp_nvic_init
;;;266    	gpio_init();
00000a  f7fffffe          BL       gpio_init
;;;267    //	pwm_gpio_init();
;;;268    //	iwatchdog_config();
;;;269    	usart1_init(115200, 8, 0, 1);
00000e  2301              MOVS     r3,#1
000010  2200              MOVS     r2,#0
000012  2108              MOVS     r1,#8
000014  f44f30e1          MOV      r0,#0x1c200
000018  f7fffffe          BL       usart1_init
;;;270    	usart2_init(115200);
00001c  f44f30e1          MOV      r0,#0x1c200
000020  f7fffffe          BL       usart2_init
;;;271    	usart4_init(115200);
000024  f44f30e1          MOV      r0,#0x1c200
000028  f7fffffe          BL       usart4_init
;;;272    
;;;273    	timer2_init(200, 41);
00002c  2129              MOVS     r1,#0x29
00002e  20c8              MOVS     r0,#0xc8
000030  f7fffffe          BL       timer2_init
;;;274    //	pwm_timer3_init(9999, 143);
;;;275    //	pwm3_init(30);
;;;276    
;;;277    	Adc_Init();
000034  f7fffffe          BL       Adc_Init
;;;278    }
000038  bd10              POP      {r4,pc}
;;;279    
                          ENDP


                          AREA ||i.bsp_nvic_init||, CODE, READONLY, ALIGN=1

                  bsp_nvic_init PROC
;;;198    
;;;199    void bsp_nvic_init(void)
000000  b508              PUSH     {r3,lr}
;;;200    {
;;;201    	NVIC_InitTypeDef nvic_init_structure;
;;;202    
;;;203    	
;;;204    	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
000002  f44f60e0          MOV      r0,#0x700
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;205    
;;;206    	// TIM2
;;;207    	nvic_init_structure.NVIC_IRQChannel = TIM2_IRQn;
00000a  201c              MOVS     r0,#0x1c
00000c  f88d0000          STRB     r0,[sp,#0]
;;;208        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 0;    //
000010  2000              MOVS     r0,#0
000012  f88d0001          STRB     r0,[sp,#1]
;;;209        nvic_init_structure.NVIC_IRQChannelSubPriority = 2;
000016  2002              MOVS     r0,#2
000018  f88d0002          STRB     r0,[sp,#2]
;;;210        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;211        NVIC_Init(&nvic_init_structure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;212    	
;;;213    		// TIM3
;;;214    	nvic_init_structure.NVIC_IRQChannel = TIM3_IRQn;
000028  201d              MOVS     r0,#0x1d
00002a  f88d0000          STRB     r0,[sp,#0]
;;;215        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 0;    //
00002e  2000              MOVS     r0,#0
000030  f88d0001          STRB     r0,[sp,#1]
;;;216        nvic_init_structure.NVIC_IRQChannelSubPriority = 3;
000034  2003              MOVS     r0,#3
000036  f88d0002          STRB     r0,[sp,#2]
;;;217        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;
00003a  2001              MOVS     r0,#1
00003c  f88d0003          STRB     r0,[sp,#3]
;;;218        NVIC_Init(&nvic_init_structure);
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       NVIC_Init
;;;219    
;;;220    	
;;;221    	// USART1
;;;222    	nvic_init_structure.NVIC_IRQChannel = USART1_IRQn;
000046  2025              MOVS     r0,#0x25
000048  f88d0000          STRB     r0,[sp,#0]
;;;223        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
00004c  2001              MOVS     r0,#1
00004e  f88d0001          STRB     r0,[sp,#1]
;;;224        nvic_init_structure.NVIC_IRQChannelSubPriority = 1;
000052  f88d0002          STRB     r0,[sp,#2]
;;;225        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000056  f88d0003          STRB     r0,[sp,#3]
;;;226    	NVIC_Init(&nvic_init_structure);
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       NVIC_Init
;;;227    	
;;;228    	// USART2
;;;229    	nvic_init_structure.NVIC_IRQChannel = USART2_IRQn;
000060  2026              MOVS     r0,#0x26
000062  f88d0000          STRB     r0,[sp,#0]
;;;230        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
000066  2001              MOVS     r0,#1
000068  f88d0001          STRB     r0,[sp,#1]
;;;231        nvic_init_structure.NVIC_IRQChannelSubPriority = 2;
00006c  2002              MOVS     r0,#2
00006e  f88d0002          STRB     r0,[sp,#2]
;;;232        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000072  2001              MOVS     r0,#1
000074  f88d0003          STRB     r0,[sp,#3]
;;;233    	NVIC_Init(&nvic_init_structure);	
000078  4668              MOV      r0,sp
00007a  f7fffffe          BL       NVIC_Init
;;;234    	
;;;235    	// USART3
;;;236    	nvic_init_structure.NVIC_IRQChannel = USART3_IRQn;
00007e  2027              MOVS     r0,#0x27
000080  f88d0000          STRB     r0,[sp,#0]
;;;237        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
000084  2001              MOVS     r0,#1
000086  f88d0001          STRB     r0,[sp,#1]
;;;238        nvic_init_structure.NVIC_IRQChannelSubPriority = 3;
00008a  2003              MOVS     r0,#3
00008c  f88d0002          STRB     r0,[sp,#2]
;;;239        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000090  2001              MOVS     r0,#1
000092  f88d0003          STRB     r0,[sp,#3]
;;;240    	NVIC_Init(&nvic_init_structure);	
000096  4668              MOV      r0,sp
000098  f7fffffe          BL       NVIC_Init
;;;241    	
;;;242    //	// USART4
;;;243    //	nvic_init_structure.NVIC_IRQChannel = UART4_IRQn;
;;;244    //    nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
;;;245    //    nvic_init_structure.NVIC_IRQChannelSubPriority = 4;
;;;246    //    nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
;;;247    //	NVIC_Init(&nvic_init_structure);	
;;;248    }
00009c  bd08              POP      {r3,pc}
;;;249    
                          ENDP


                          AREA ||i.bsp_rcc_init||, CODE, READONLY, ALIGN=1

                  bsp_rcc_init PROC
;;;33     */
;;;34     void bsp_rcc_init(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     
;;;37     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);	
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;38     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);	
00000a  2101              MOVS     r1,#1
00000c  0448              LSLS     r0,r1,#17
00000e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;39     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
000012  2101              MOVS     r1,#1
000014  0488              LSLS     r0,r1,#18
000016  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;40     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_UART4, ENABLE);
00001a  2101              MOVS     r1,#1
00001c  04c8              LSLS     r0,r1,#19
00001e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;41     //	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
;;;42     	
;;;43     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA , ENABLE);
000022  2101              MOVS     r1,#1
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;44     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);
00002a  2101              MOVS     r1,#1
00002c  2008              MOVS     r0,#8
00002e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;45     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC , ENABLE);
000032  2101              MOVS     r1,#1
000034  2010              MOVS     r0,#0x10
000036  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;46     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD , ENABLE);
00003a  2101              MOVS     r1,#1
00003c  2020              MOVS     r0,#0x20
00003e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;47     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
000042  2101              MOVS     r1,#1
000044  0388              LSLS     r0,r1,#14
000046  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;48     	
;;;49     }
00004a  bd10              POP      {r4,pc}
;;;50     
                          ENDP


                          AREA ||i.gpio_init||, CODE, READONLY, ALIGN=2

                  gpio_init PROC
;;;99     */
;;;100    void gpio_init(void)
000000  b508              PUSH     {r3,lr}
;;;101    {
;;;102    	GPIO_InitTypeDef gpio_init_structure;
;;;103    	
;;;104    //	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;105    //	gpio_init_structure.GPIO_Pin = GPIO_Pin_3;				                 //LED1
;;;106    //  	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;107    //  	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
;;;108    //  	GPIO_Init(GPIOB, &gpio_init_structure);	
;;;109    
;;;110    	
;;;111    	// UART1
;;;112    	gpio_init_structure.GPIO_Pin = GPIO_Pin_9;				// UART1 TX				    
000002  f44f7000          MOV      r0,#0x200
000006  f8ad0000          STRH     r0,[sp,#0]
;;;113      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
00000a  2018              MOVS     r0,#0x18
00000c  f88d0003          STRB     r0,[sp,#3]
;;;114      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;115      	GPIO_Init(GPIOA, &gpio_init_structure);
000016  4669              MOV      r1,sp
000018  485d              LDR      r0,|L4.400|
00001a  f7fffffe          BL       GPIO_Init
;;;116    	gpio_init_structure.GPIO_Pin = GPIO_Pin_10;				
00001e  f44f6080          MOV      r0,#0x400
000022  f8ad0000          STRH     r0,[sp,#0]
;;;117      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000026  2004              MOVS     r0,#4
000028  f88d0003          STRB     r0,[sp,#3]
;;;118      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
00002c  2003              MOVS     r0,#3
00002e  f88d0002          STRB     r0,[sp,#2]
;;;119      	GPIO_Init(GPIOA, &gpio_init_structure);
000032  4669              MOV      r1,sp
000034  4856              LDR      r0,|L4.400|
000036  f7fffffe          BL       GPIO_Init
;;;120    	
;;;121    	// UART2
;;;122    	gpio_init_structure.GPIO_Pin = GPIO_Pin_2;				// UART2 TX				    
00003a  2004              MOVS     r0,#4
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;123      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
000040  2018              MOVS     r0,#0x18
000042  f88d0003          STRB     r0,[sp,#3]
;;;124      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
000046  2003              MOVS     r0,#3
000048  f88d0002          STRB     r0,[sp,#2]
;;;125      	GPIO_Init(GPIOA, &gpio_init_structure);
00004c  4669              MOV      r1,sp
00004e  4850              LDR      r0,|L4.400|
000050  f7fffffe          BL       GPIO_Init
;;;126    	gpio_init_structure.GPIO_Pin = GPIO_Pin_3;				
000054  2008              MOVS     r0,#8
000056  f8ad0000          STRH     r0,[sp,#0]
;;;127      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00005a  2004              MOVS     r0,#4
00005c  f88d0003          STRB     r0,[sp,#3]
;;;128      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
000060  2003              MOVS     r0,#3
000062  f88d0002          STRB     r0,[sp,#2]
;;;129      	GPIO_Init(GPIOA, &gpio_init_structure);
000066  4669              MOV      r1,sp
000068  4849              LDR      r0,|L4.400|
00006a  f7fffffe          BL       GPIO_Init
;;;130    
;;;131    
;;;132    	// UART3
;;;133    	gpio_init_structure.GPIO_Pin = GPIO_Pin_10;				// UART3 TX				    
00006e  f44f6080          MOV      r0,#0x400
000072  f8ad0000          STRH     r0,[sp,#0]
;;;134      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
000076  2018              MOVS     r0,#0x18
000078  f88d0003          STRB     r0,[sp,#3]
;;;135      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
00007c  2003              MOVS     r0,#3
00007e  f88d0002          STRB     r0,[sp,#2]
;;;136      	GPIO_Init(GPIOB, &gpio_init_structure);
000082  4669              MOV      r1,sp
000084  4843              LDR      r0,|L4.404|
000086  f7fffffe          BL       GPIO_Init
;;;137    	gpio_init_structure.GPIO_Pin = GPIO_Pin_11;				
00008a  f44f6000          MOV      r0,#0x800
00008e  f8ad0000          STRH     r0,[sp,#0]
;;;138      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000092  2004              MOVS     r0,#4
000094  f88d0003          STRB     r0,[sp,#3]
;;;139      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
000098  2003              MOVS     r0,#3
00009a  f88d0002          STRB     r0,[sp,#2]
;;;140      	GPIO_Init(GPIOB, &gpio_init_structure);
00009e  4669              MOV      r1,sp
0000a0  483c              LDR      r0,|L4.404|
0000a2  f7fffffe          BL       GPIO_Init
;;;141    	
;;;142    	
;;;143    	// UART4
;;;144    	gpio_init_structure.GPIO_Pin = GPIO_Pin_10;				// UART4 TX				    
0000a6  f44f6080          MOV      r0,#0x400
0000aa  f8ad0000          STRH     r0,[sp,#0]
;;;145      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
0000ae  2018              MOVS     r0,#0x18
0000b0  f88d0003          STRB     r0,[sp,#3]
;;;146      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
0000b4  2003              MOVS     r0,#3
0000b6  f88d0002          STRB     r0,[sp,#2]
;;;147      	GPIO_Init(GPIOC, &gpio_init_structure);
0000ba  4669              MOV      r1,sp
0000bc  4836              LDR      r0,|L4.408|
0000be  f7fffffe          BL       GPIO_Init
;;;148    	gpio_init_structure.GPIO_Pin = GPIO_Pin_11;				
0000c2  f44f6000          MOV      r0,#0x800
0000c6  f8ad0000          STRH     r0,[sp,#0]
;;;149      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0000ca  2004              MOVS     r0,#4
0000cc  f88d0003          STRB     r0,[sp,#3]
;;;150      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
0000d0  2003              MOVS     r0,#3
0000d2  f88d0002          STRB     r0,[sp,#2]
;;;151      	GPIO_Init(GPIOC, &gpio_init_structure);
0000d6  4669              MOV      r1,sp
0000d8  482f              LDR      r0,|L4.408|
0000da  f7fffffe          BL       GPIO_Init
;;;152    	
;;;153    	//I2C
;;;154    	gpio_init_structure.GPIO_Pin = GPIO_Pin_0;
0000de  2001              MOVS     r0,#1
0000e0  f8ad0000          STRH     r0,[sp,#0]
;;;155      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
0000e4  2003              MOVS     r0,#3
0000e6  f88d0002          STRB     r0,[sp,#2]
;;;156    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
0000ea  2010              MOVS     r0,#0x10
0000ec  f88d0003          STRB     r0,[sp,#3]
;;;157      	GPIO_Init(GPIOB, &gpio_init_structure);
0000f0  4669              MOV      r1,sp
0000f2  4828              LDR      r0,|L4.404|
0000f4  f7fffffe          BL       GPIO_Init
;;;158    	
;;;159    	gpio_init_structure.GPIO_Pin = GPIO_Pin_1;
0000f8  2002              MOVS     r0,#2
0000fa  f8ad0000          STRH     r0,[sp,#0]
;;;160      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
0000fe  2003              MOVS     r0,#3
000100  f88d0002          STRB     r0,[sp,#2]
;;;161    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_OD;          
000104  2014              MOVS     r0,#0x14
000106  f88d0003          STRB     r0,[sp,#3]
;;;162      	GPIO_Init(GPIOB, &gpio_init_structure);
00010a  4669              MOV      r1,sp
00010c  4821              LDR      r0,|L4.404|
00010e  f7fffffe          BL       GPIO_Init
;;;163    	
;;;164    	
;;;165    	//button
;;;166    	gpio_init_structure.GPIO_Pin = GPIO_Pin_6;
000112  2040              MOVS     r0,#0x40
000114  f8ad0000          STRH     r0,[sp,#0]
;;;167    	gpio_init_structure.GPIO_Mode = GPIO_Mode_IPU;          
000118  2048              MOVS     r0,#0x48
00011a  f88d0003          STRB     r0,[sp,#3]
;;;168      	GPIO_Init(GPIOC, &gpio_init_structure);
00011e  4669              MOV      r1,sp
000120  481d              LDR      r0,|L4.408|
000122  f7fffffe          BL       GPIO_Init
;;;169    	
;;;170    	
;;;171    	//LOCK ON   OFF
;;;172    	gpio_init_structure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
000126  2030              MOVS     r0,#0x30
000128  f8ad0000          STRH     r0,[sp,#0]
;;;173      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
00012c  2003              MOVS     r0,#3
00012e  f88d0002          STRB     r0,[sp,#2]
;;;174    	gpio_init_structure.GPIO_Mode = GPIO_Mode_IPU;          
000132  2048              MOVS     r0,#0x48
000134  f88d0003          STRB     r0,[sp,#3]
;;;175      	GPIO_Init(GPIOA, &gpio_init_structure);
000138  4669              MOV      r1,sp
00013a  4815              LDR      r0,|L4.400|
00013c  f7fffffe          BL       GPIO_Init
;;;176    	
;;;177    	//MOTO D+ MOTO D-
;;;178    	gpio_init_structure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
000140  2003              MOVS     r0,#3
000142  f8ad0000          STRH     r0,[sp,#0]
;;;179      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
000146  f88d0002          STRB     r0,[sp,#2]
;;;180    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
00014a  2010              MOVS     r0,#0x10
00014c  f88d0003          STRB     r0,[sp,#3]
;;;181      	GPIO_Init(GPIOC, &gpio_init_structure);
000150  4669              MOV      r1,sp
000152  4811              LDR      r0,|L4.408|
000154  f7fffffe          BL       GPIO_Init
;;;182    	
;;;183    	//BELL
;;;184    	gpio_init_structure.GPIO_Pin = GPIO_Pin_3;
000158  2008              MOVS     r0,#8
00015a  f8ad0000          STRH     r0,[sp,#0]
;;;185      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
00015e  2003              MOVS     r0,#3
000160  f88d0002          STRB     r0,[sp,#2]
;;;186    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
000164  2010              MOVS     r0,#0x10
000166  f88d0003          STRB     r0,[sp,#3]
;;;187      	GPIO_Init(GPIOC, &gpio_init_structure);
00016a  4669              MOV      r1,sp
00016c  480a              LDR      r0,|L4.408|
00016e  f7fffffe          BL       GPIO_Init
;;;188    	
;;;189    	
;;;190    	//GPS power enable
;;;191    	gpio_init_structure.GPIO_Pin = GPIO_Pin_4;
000172  2010              MOVS     r0,#0x10
000174  f8ad0000          STRH     r0,[sp,#0]
;;;192      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
000178  2003              MOVS     r0,#3
00017a  f88d0002          STRB     r0,[sp,#2]
;;;193    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
00017e  2010              MOVS     r0,#0x10
000180  f88d0003          STRB     r0,[sp,#3]
;;;194      	GPIO_Init(GPIOC, &gpio_init_structure);
000184  4669              MOV      r1,sp
000186  4804              LDR      r0,|L4.408|
000188  f7fffffe          BL       GPIO_Init
;;;195    }
00018c  bd08              POP      {r3,pc}
;;;196    
                          ENDP

00018e  0000              DCW      0x0000
                  |L4.400|
                          DCD      0x40010800
                  |L4.404|
                          DCD      0x40010c00
                  |L4.408|
                          DCD      0x40011000

                          AREA ||i.iwatchdog_clear||, CODE, READONLY, ALIGN=1

                  iwatchdog_clear PROC
;;;83     */
;;;84     void iwatchdog_clear(void)
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86     	IWDG_ReloadCounter();
000002  f7fffffe          BL       IWDG_ReloadCounter
;;;87     }
000006  bd10              POP      {r4,pc}
;;;88     
                          ENDP


                          AREA ||i.iwatchdog_config||, CODE, READONLY, ALIGN=1

                  iwatchdog_config PROC
;;;63     */
;;;64     void iwatchdog_config(void)
000000  b510              PUSH     {r4,lr}
;;;65     {
;;;66     	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
000002  f2455055          MOV      r0,#0x5555
000006  f7fffffe          BL       IWDG_WriteAccessCmd
;;;67     	IWDG_SetPrescaler(IWDG_Prescaler_64);
00000a  2004              MOVS     r0,#4
00000c  f7fffffe          BL       IWDG_SetPrescaler
;;;68     	IWDG_SetReload(0xFFE);
000010  f64070fe          MOV      r0,#0xffe
000014  f7fffffe          BL       IWDG_SetReload
;;;69     	IWDG_ReloadCounter();
000018  f7fffffe          BL       IWDG_ReloadCounter
;;;70     	IWDG_Enable();		
00001c  f7fffffe          BL       IWDG_Enable
;;;71     }
000020  bd10              POP      {r4,pc}
;;;72     
                          ENDP

