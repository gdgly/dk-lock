; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\bsp.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\driver -I..\BSP -I..\system -I..\tplib -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\app -I..\MQTT -IE:\github\dk-lock\src\Project\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -W --omf_browse=.\obj\bsp.crf ..\BSP\bsp.c]
                          THUMB

                          AREA ||i.bsp_init||, CODE, READONLY, ALIGN=1

                  bsp_init PROC
;;;267    */
;;;268    void bsp_init(void)
000000  b510              PUSH     {r4,lr}
;;;269    {
;;;270    	bsp_rcc_init();
000002  f7fffffe          BL       bsp_rcc_init
;;;271    	bsp_nvic_init();
000006  f7fffffe          BL       bsp_nvic_init
;;;272    	gpio_init();
00000a  f7fffffe          BL       gpio_init
;;;273    //	pwm_gpio_init();
;;;274    //	iwatchdog_config();
;;;275    	usart1_init(115200, 8, 0, 1);
00000e  2301              MOVS     r3,#1
000010  2200              MOVS     r2,#0
000012  2108              MOVS     r1,#8
000014  f44f30e1          MOV      r0,#0x1c200
000018  f7fffffe          BL       usart1_init
;;;276    	usart2_init(115200);
00001c  f44f30e1          MOV      r0,#0x1c200
000020  f7fffffe          BL       usart2_init
;;;277    //	usart4_init(115200);
;;;278    
;;;279    	timer2_init(200, 41);
000024  2129              MOVS     r1,#0x29
000026  20c8              MOVS     r0,#0xc8
000028  f7fffffe          BL       timer2_init
;;;280    //	pwm_timer3_init(9999, 143);
;;;281    //	pwm3_init(30);
;;;282    
;;;283    	Adc_Init();
00002c  f7fffffe          BL       Adc_Init
;;;284    }
000030  bd10              POP      {r4,pc}
;;;285    
                          ENDP


                          AREA ||i.bsp_nvic_init||, CODE, READONLY, ALIGN=1

                  bsp_nvic_init PROC
;;;204    
;;;205    void bsp_nvic_init(void)
000000  b508              PUSH     {r3,lr}
;;;206    {
;;;207    	NVIC_InitTypeDef nvic_init_structure;
;;;208    
;;;209    	
;;;210    	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
000002  f44f60e0          MOV      r0,#0x700
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;211    
;;;212    	// TIM2
;;;213    	nvic_init_structure.NVIC_IRQChannel = TIM2_IRQn;
00000a  201c              MOVS     r0,#0x1c
00000c  f88d0000          STRB     r0,[sp,#0]
;;;214        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 0;    //
000010  2000              MOVS     r0,#0
000012  f88d0001          STRB     r0,[sp,#1]
;;;215        nvic_init_structure.NVIC_IRQChannelSubPriority = 2;
000016  2002              MOVS     r0,#2
000018  f88d0002          STRB     r0,[sp,#2]
;;;216        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;217        NVIC_Init(&nvic_init_structure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;218    	
;;;219    		// TIM3
;;;220    	nvic_init_structure.NVIC_IRQChannel = TIM3_IRQn;
000028  201d              MOVS     r0,#0x1d
00002a  f88d0000          STRB     r0,[sp,#0]
;;;221        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 0;    //
00002e  2000              MOVS     r0,#0
000030  f88d0001          STRB     r0,[sp,#1]
;;;222        nvic_init_structure.NVIC_IRQChannelSubPriority = 3;
000034  2003              MOVS     r0,#3
000036  f88d0002          STRB     r0,[sp,#2]
;;;223        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;
00003a  2001              MOVS     r0,#1
00003c  f88d0003          STRB     r0,[sp,#3]
;;;224        NVIC_Init(&nvic_init_structure);
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       NVIC_Init
;;;225    
;;;226    	
;;;227    	// USART1
;;;228    	nvic_init_structure.NVIC_IRQChannel = USART1_IRQn;
000046  2025              MOVS     r0,#0x25
000048  f88d0000          STRB     r0,[sp,#0]
;;;229        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
00004c  2001              MOVS     r0,#1
00004e  f88d0001          STRB     r0,[sp,#1]
;;;230        nvic_init_structure.NVIC_IRQChannelSubPriority = 1;
000052  f88d0002          STRB     r0,[sp,#2]
;;;231        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000056  f88d0003          STRB     r0,[sp,#3]
;;;232    	NVIC_Init(&nvic_init_structure);
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       NVIC_Init
;;;233    	
;;;234    	// USART2
;;;235    	nvic_init_structure.NVIC_IRQChannel = USART2_IRQn;
000060  2026              MOVS     r0,#0x26
000062  f88d0000          STRB     r0,[sp,#0]
;;;236        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
000066  2001              MOVS     r0,#1
000068  f88d0001          STRB     r0,[sp,#1]
;;;237        nvic_init_structure.NVIC_IRQChannelSubPriority = 2;
00006c  2002              MOVS     r0,#2
00006e  f88d0002          STRB     r0,[sp,#2]
;;;238        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000072  2001              MOVS     r0,#1
000074  f88d0003          STRB     r0,[sp,#3]
;;;239    	NVIC_Init(&nvic_init_structure);	
000078  4668              MOV      r0,sp
00007a  f7fffffe          BL       NVIC_Init
;;;240    	
;;;241    	// USART3
;;;242    	nvic_init_structure.NVIC_IRQChannel = USART3_IRQn;
00007e  2027              MOVS     r0,#0x27
000080  f88d0000          STRB     r0,[sp,#0]
;;;243        nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
000084  2001              MOVS     r0,#1
000086  f88d0001          STRB     r0,[sp,#1]
;;;244        nvic_init_structure.NVIC_IRQChannelSubPriority = 3;
00008a  2003              MOVS     r0,#3
00008c  f88d0002          STRB     r0,[sp,#2]
;;;245        nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
000090  2001              MOVS     r0,#1
000092  f88d0003          STRB     r0,[sp,#3]
;;;246    	NVIC_Init(&nvic_init_structure);	
000096  4668              MOV      r0,sp
000098  f7fffffe          BL       NVIC_Init
;;;247    	
;;;248    //	// USART4
;;;249    //	nvic_init_structure.NVIC_IRQChannel = UART4_IRQn;
;;;250    //    nvic_init_structure.NVIC_IRQChannelPreemptionPriority = 1;
;;;251    //    nvic_init_structure.NVIC_IRQChannelSubPriority = 4;
;;;252    //    nvic_init_structure.NVIC_IRQChannelCmd = ENABLE;	 
;;;253    //	NVIC_Init(&nvic_init_structure);	
;;;254    }
00009c  bd08              POP      {r3,pc}
;;;255    
                          ENDP


                          AREA ||i.bsp_rcc_init||, CODE, READONLY, ALIGN=1

                  bsp_rcc_init PROC
;;;33     */
;;;34     void bsp_rcc_init(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     
;;;37     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);	
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;38     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);	
00000a  2101              MOVS     r1,#1
00000c  0448              LSLS     r0,r1,#17
00000e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;39     //	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
;;;40     //	RCC_APB1PeriphClockCmd(RCC_APB1Periph_UART4, ENABLE);
;;;41     //	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
;;;42     	
;;;43     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA , ENABLE);
000012  2101              MOVS     r1,#1
000014  2004              MOVS     r0,#4
000016  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;44     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);
00001a  2101              MOVS     r1,#1
00001c  2008              MOVS     r0,#8
00001e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;45     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC , ENABLE);
000022  2101              MOVS     r1,#1
000024  2010              MOVS     r0,#0x10
000026  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;46     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
00002a  2101              MOVS     r1,#1
00002c  0388              LSLS     r0,r1,#14
00002e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;47     	
;;;48     }
000032  bd10              POP      {r4,pc}
;;;49     
                          ENDP


                          AREA ||i.bsp_system_reset||, CODE, READONLY, ALIGN=2

                  bsp_system_reset PROC
;;;61     */
;;;62     void bsp_system_reset(void) 
000000  2001              MOVS     r0,#1
000002  f3808813          MSR      FAULTMASK,r0
000006  bf00              NOP      
;;;63     { 
;;;64     	__set_FAULTMASK(1); 
;;;65     	NVIC_SystemReset();  
000008  bf00              NOP      
00000a  4807              LDR      r0,|L4.40|
00000c  6800              LDR      r0,[r0,#0]
00000e  f40060e0          AND      r0,r0,#0x700
000012  4906              LDR      r1,|L4.44|
000014  4308              ORRS     r0,r0,r1
000016  1d00              ADDS     r0,r0,#4
000018  4903              LDR      r1,|L4.40|
00001a  6008              STR      r0,[r1,#0]
00001c  f3bf8f4f          DSB      
000020  bf00              NOP      
000022  bf00              NOP      
                  |L4.36|
000024  e7fe              B        |L4.36|
;;;66     } 
;;;67     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      0xe000ed0c
                  |L4.44|
                          DCD      0x05fa0000

                          AREA ||i.gpio_init||, CODE, READONLY, ALIGN=2

                  gpio_init PROC
;;;115    */
;;;116    void gpio_init(void)
000000  b508              PUSH     {r3,lr}
;;;117    {
;;;118    	GPIO_InitTypeDef gpio_init_structure;
;;;119    	
;;;120    //	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;121    //	gpio_init_structure.GPIO_Pin = GPIO_Pin_3;				                 //LED1
;;;122    //  	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;123    //  	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
;;;124    //  	GPIO_Init(GPIOB, &gpio_init_structure);	
;;;125    
;;;126    	
;;;127    	// UART1
;;;128    	gpio_init_structure.GPIO_Pin = GPIO_Pin_9;				// UART1 TX				    
000002  f44f7000          MOV      r0,#0x200
000006  f8ad0000          STRH     r0,[sp,#0]
;;;129      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
00000a  2018              MOVS     r0,#0x18
00000c  f88d0003          STRB     r0,[sp,#3]
;;;130      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;131      	GPIO_Init(GPIOA, &gpio_init_structure);
000016  4669              MOV      r1,sp
000018  4841              LDR      r0,|L5.288|
00001a  f7fffffe          BL       GPIO_Init
;;;132    	gpio_init_structure.GPIO_Pin = GPIO_Pin_10;				
00001e  f44f6080          MOV      r0,#0x400
000022  f8ad0000          STRH     r0,[sp,#0]
;;;133      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000026  2004              MOVS     r0,#4
000028  f88d0003          STRB     r0,[sp,#3]
;;;134      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
00002c  2003              MOVS     r0,#3
00002e  f88d0002          STRB     r0,[sp,#2]
;;;135      	GPIO_Init(GPIOA, &gpio_init_structure);
000032  4669              MOV      r1,sp
000034  483a              LDR      r0,|L5.288|
000036  f7fffffe          BL       GPIO_Init
;;;136    	
;;;137    	// UART2
;;;138    	gpio_init_structure.GPIO_Pin = GPIO_Pin_2;				// UART2 TX				    
00003a  2004              MOVS     r0,#4
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;139      	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
000040  2018              MOVS     r0,#0x18
000042  f88d0003          STRB     r0,[sp,#3]
;;;140      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
000046  2003              MOVS     r0,#3
000048  f88d0002          STRB     r0,[sp,#2]
;;;141      	GPIO_Init(GPIOA, &gpio_init_structure);
00004c  4669              MOV      r1,sp
00004e  4834              LDR      r0,|L5.288|
000050  f7fffffe          BL       GPIO_Init
;;;142    	gpio_init_structure.GPIO_Pin = GPIO_Pin_3;				
000054  2008              MOVS     r0,#8
000056  f8ad0000          STRH     r0,[sp,#0]
;;;143      	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00005a  2004              MOVS     r0,#4
00005c  f88d0003          STRB     r0,[sp,#3]
;;;144      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
000060  2003              MOVS     r0,#3
000062  f88d0002          STRB     r0,[sp,#2]
;;;145      	GPIO_Init(GPIOA, &gpio_init_structure);
000066  4669              MOV      r1,sp
000068  482d              LDR      r0,|L5.288|
00006a  f7fffffe          BL       GPIO_Init
;;;146    
;;;147    
;;;148    	// UART3
;;;149    //	gpio_init_structure.GPIO_Pin = GPIO_Pin_10;				// UART3 TX				    
;;;150    //  	gpio_init_structure.GPIO_Mode = GPIO_Mode_AF_PP;
;;;151    //  	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			
;;;152    //  	GPIO_Init(GPIOB, &gpio_init_structure);
;;;153    //	gpio_init_structure.GPIO_Pin = GPIO_Pin_11;				
;;;154    //  	gpio_init_structure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
;;;155    //  	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;			 
;;;156    //  	GPIO_Init(GPIOB, &gpio_init_structure);
;;;157    	
;;;158    
;;;159    	//I2C
;;;160    	gpio_init_structure.GPIO_Pin = GPIO_Pin_0;
00006e  2001              MOVS     r0,#1
000070  f8ad0000          STRH     r0,[sp,#0]
;;;161      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
000074  2003              MOVS     r0,#3
000076  f88d0002          STRB     r0,[sp,#2]
;;;162    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
00007a  2010              MOVS     r0,#0x10
00007c  f88d0003          STRB     r0,[sp,#3]
;;;163      	GPIO_Init(GPIOB, &gpio_init_structure);
000080  4669              MOV      r1,sp
000082  4828              LDR      r0,|L5.292|
000084  f7fffffe          BL       GPIO_Init
;;;164    	
;;;165    	gpio_init_structure.GPIO_Pin = GPIO_Pin_1;
000088  2002              MOVS     r0,#2
00008a  f8ad0000          STRH     r0,[sp,#0]
;;;166      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
00008e  2003              MOVS     r0,#3
000090  f88d0002          STRB     r0,[sp,#2]
;;;167    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_OD;          
000094  2014              MOVS     r0,#0x14
000096  f88d0003          STRB     r0,[sp,#3]
;;;168      	GPIO_Init(GPIOB, &gpio_init_structure);
00009a  4669              MOV      r1,sp
00009c  4821              LDR      r0,|L5.292|
00009e  f7fffffe          BL       GPIO_Init
;;;169    	
;;;170    	
;;;171    	//button
;;;172    	gpio_init_structure.GPIO_Pin = GPIO_Pin_6;
0000a2  2040              MOVS     r0,#0x40
0000a4  f8ad0000          STRH     r0,[sp,#0]
;;;173    	gpio_init_structure.GPIO_Mode = GPIO_Mode_IPU;          
0000a8  2048              MOVS     r0,#0x48
0000aa  f88d0003          STRB     r0,[sp,#3]
;;;174      	GPIO_Init(GPIOC, &gpio_init_structure);
0000ae  4669              MOV      r1,sp
0000b0  481d              LDR      r0,|L5.296|
0000b2  f7fffffe          BL       GPIO_Init
;;;175    	
;;;176    	
;;;177    	//LOCK ON   OFF
;;;178    	gpio_init_structure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
0000b6  2030              MOVS     r0,#0x30
0000b8  f8ad0000          STRH     r0,[sp,#0]
;;;179      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
0000bc  2003              MOVS     r0,#3
0000be  f88d0002          STRB     r0,[sp,#2]
;;;180    	gpio_init_structure.GPIO_Mode = GPIO_Mode_IPU;          
0000c2  2048              MOVS     r0,#0x48
0000c4  f88d0003          STRB     r0,[sp,#3]
;;;181      	GPIO_Init(GPIOA, &gpio_init_structure);
0000c8  4669              MOV      r1,sp
0000ca  4815              LDR      r0,|L5.288|
0000cc  f7fffffe          BL       GPIO_Init
;;;182    	
;;;183    	//MOTO D+ MOTO D-
;;;184    	gpio_init_structure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
0000d0  2003              MOVS     r0,#3
0000d2  f8ad0000          STRH     r0,[sp,#0]
;;;185      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
0000d6  f88d0002          STRB     r0,[sp,#2]
;;;186    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
0000da  2010              MOVS     r0,#0x10
0000dc  f88d0003          STRB     r0,[sp,#3]
;;;187      	GPIO_Init(GPIOC, &gpio_init_structure);
0000e0  4669              MOV      r1,sp
0000e2  4811              LDR      r0,|L5.296|
0000e4  f7fffffe          BL       GPIO_Init
;;;188    	
;;;189    	//BELL
;;;190    	gpio_init_structure.GPIO_Pin = GPIO_Pin_2;
0000e8  2004              MOVS     r0,#4
0000ea  f8ad0000          STRH     r0,[sp,#0]
;;;191      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
0000ee  2003              MOVS     r0,#3
0000f0  f88d0002          STRB     r0,[sp,#2]
;;;192    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
0000f4  2010              MOVS     r0,#0x10
0000f6  f88d0003          STRB     r0,[sp,#3]
;;;193      	GPIO_Init(GPIOC, &gpio_init_structure);
0000fa  4669              MOV      r1,sp
0000fc  480a              LDR      r0,|L5.296|
0000fe  f7fffffe          BL       GPIO_Init
;;;194    	
;;;195    	
;;;196    	//GPS power enable
;;;197    	gpio_init_structure.GPIO_Pin = GPIO_Pin_4;
000102  2010              MOVS     r0,#0x10
000104  f8ad0000          STRH     r0,[sp,#0]
;;;198      	gpio_init_structure.GPIO_Speed = GPIO_Speed_50MHz;
000108  2003              MOVS     r0,#3
00010a  f88d0002          STRB     r0,[sp,#2]
;;;199    	gpio_init_structure.GPIO_Mode = GPIO_Mode_Out_PP;          
00010e  2010              MOVS     r0,#0x10
000110  f88d0003          STRB     r0,[sp,#3]
;;;200      	GPIO_Init(GPIOC, &gpio_init_structure);
000114  4669              MOV      r1,sp
000116  4804              LDR      r0,|L5.296|
000118  f7fffffe          BL       GPIO_Init
;;;201    }
00011c  bd08              POP      {r3,pc}
;;;202    
                          ENDP

00011e  0000              DCW      0x0000
                  |L5.288|
                          DCD      0x40010800
                  |L5.292|
                          DCD      0x40010c00
                  |L5.296|
                          DCD      0x40011000

                          AREA ||i.iwatchdog_clear||, CODE, READONLY, ALIGN=1

                  iwatchdog_clear PROC
;;;99     */
;;;100    void iwatchdog_clear(void)
000000  b510              PUSH     {r4,lr}
;;;101    {
;;;102    	IWDG_ReloadCounter();
000002  f7fffffe          BL       IWDG_ReloadCounter
;;;103    }
000006  bd10              POP      {r4,pc}
;;;104    
                          ENDP


                          AREA ||i.iwatchdog_config||, CODE, READONLY, ALIGN=1

                  iwatchdog_config PROC
;;;79     */
;;;80     void iwatchdog_config(void)
000000  b510              PUSH     {r4,lr}
;;;81     {
;;;82     	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
000002  f2455055          MOV      r0,#0x5555
000006  f7fffffe          BL       IWDG_WriteAccessCmd
;;;83     	IWDG_SetPrescaler(IWDG_Prescaler_64);
00000a  2004              MOVS     r0,#4
00000c  f7fffffe          BL       IWDG_SetPrescaler
;;;84     	IWDG_SetReload(0xFFE);
000010  f64070fe          MOV      r0,#0xffe
000014  f7fffffe          BL       IWDG_SetReload
;;;85     	IWDG_ReloadCounter();
000018  f7fffffe          BL       IWDG_ReloadCounter
;;;86     	IWDG_Enable();		
00001c  f7fffffe          BL       IWDG_Enable
;;;87     }
000020  bd10              POP      {r4,pc}
;;;88     
                          ENDP

